#+AUTHOR: Martin Richter
#+email: martin.richter@nottingham.ac.uk
#+date: [2023-03-09 Thu 13:00-14:00]
#+STARTUP: showall inlineimages latexpreview entitiesplain hideblocks
#+OPTIONS: ^:nil toc:nil
#+OPTIONS: tex:dvipng  # HTML export with pngs rather than MathJax

* Outlook

We are going to implement the logistic map and the transfer operator for it.

Let $r \in [0, 4]$. The logisitic map is given by

$f_r : [0, 1] \to [0, 1]$

$x \mapsto r \cdot x \cdot (1-x)$

A python implementation would look like this:
#+begin_src python :session :export code
def logistic_map(r, x):
    """
    Returns the next value for the logistic map with parameter r.

    fᵣ(x) = r·x·(1 - x)

    Paramters
    ---------
    r : double
        Parameter of the logistic map, r∈[0, 4]
    x : double or ndarray
        points to evaluate fᵣ(x) at

    Returns
    -------
    fx : double or ndarray
        values of fᵣ(x)
    """
    return r * x * (1 - x)
#+end_src

#+RESULTS:

We can use it iteratively:
#+begin_src python :session :export code :results output raw
import functools
r = 3.54
x = 0.45

f_r = functools.partial(logistic_map, r)
print(f"Using r={r} in the logistic map\n")
print("| iter | value |\n|---|")
for j in range(5):
    print(f"| {j: 4d} | {x: .7f} |")
    x = f_r(x)
print("")
#+end_src

#+RESULTS:
Using r=3.54 in the logistic map

| iter |     value |
|------+-----------|
|    0 | 0.4500000 |
|    1 | 0.8761500 |
|    2 | 0.3841296 |
|    3 | 0.8374721 |
|    4 | 0.4818385 |
